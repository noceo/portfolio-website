// .container-fluid {
//   margin: 0 5%;
//   width: unset;

//   @include media-breakpoint-up(md) {
//     margin: 0 10%;
//   }
// }

@function breakpoint-next(
  $name,
  $breakpoints: $grid-breakpoints,
  $breakpoint-names: map-keys($breakpoints)
) {
  $n: index($breakpoint-names, $name);
  @if not $n {
    @error "breakpoint `#{$name}` not found in `#{$breakpoints}`";
  }
  @return if(
    $n < length($breakpoint-names),
    nth($breakpoint-names, $n + 1),
    null
  );
}

@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min !=0, $min, null);
}

@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $max: map-get($breakpoints, $name);
  @return if($max and $max > 0, $max - 0.02, null);
}

@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  $next: breakpoint-next($name, $breakpoints);
  $max: breakpoint-max($next, $breakpoints);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @include media-breakpoint-up($name, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include media-breakpoint-down($next, $breakpoints) {
      @content;
    }
  }
}

@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);

  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}

$gutter: 6vw;
$max-container-width: 80rem;

$grid-breakpoints: (
  xs: 0,
  sm: 640px,
  md: 768px,
  lg: 1024px,
  xl: 1280px,
  xxl: 1536px,
);

$container-widths: (
  xs: 85vw,
  sm: 85vw,
  md: 80vw,
  lg: 75vw,
);

.breakout-xs {
  @include media-breakpoint-only(xs) {
    margin-left: calc(
      (100vw - map-get($map: $container-widths, $key: xs)) / 2 * -1
    );
    margin-right: calc(
      (100vw - map-get($map: $container-widths, $key: xs)) / 2 * -1
    );
  }
}

.breakout-sm {
  @include media-breakpoint-only(sm) {
    margin-left: calc(
      (100vw - map-get($map: $container-widths, $key: sm)) / 2 * -1
    );
    margin-right: calc(
      (100vw - map-get($map: $container-widths, $key: sm)) / 2 * -1
    );
  }
}

.container-fluid,
.container {
  margin-right: auto;
  margin-left: auto;
}

.container div {
  // border: 1px solid red;
}

.container-fluid {
  width: 100%;
  overflow: hidden;
}

@mixin container {
  @each $infix, $breakpoint in $grid-breakpoints {
    @media only screen and (min-width: $breakpoint) {
      width: map-get($map: $container-widths, $key: $infix);
    }
  }
  @media only screen and (min-width: map-get($map: $grid-breakpoints, $key: lg)) {
    max-width: $max-container-width;
  }
}

.container {
  @include container;
}

.row {
  box-sizing: border-box;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 0;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -$gutter / 2;
  margin-left: -$gutter / 2;
}

.row.reverse {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
}

.col.reverse {
  -webkit-box-orient: vertical;
  -webkit-box-direction: reverse;
  -ms-flex-direction: column-reverse;
  flex-direction: column-reverse;
}

@each $infix, $breakpoint in $grid-breakpoints {
  @media screen and (min-width: #{$breakpoint}) {
    @for $i from 1 to 13 {
      .col-#{$infix}-#{$i},
      .offset-#{$infix}-#{$i} {
        box-sizing: border-box;
        -webkit-box-flex: 0;
        -ms-flex: 0 0 auto;
        flex: 0 0 auto;
        padding-right: $gutter / 2;
        padding-left: $gutter / 2;
      }
    }

    .col-#{$infix}-1 {
      -ms-flex-preferred-size: 8.33333333%;
      flex-basis: 8.33333333%;
      max-width: 8.33333333%;
    }

    .col-#{$infix}-2 {
      -ms-flex-preferred-size: 16.66666667%;
      flex-basis: 16.66666667%;
      max-width: 16.66666667%;
    }

    .col-#{$infix}-3 {
      -ms-flex-preferred-size: 25%;
      flex-basis: 25%;
      max-width: 25%;
    }

    .col-#{$infix}-4 {
      -ms-flex-preferred-size: 33.33333333%;
      flex-basis: 33.33333333%;
      max-width: 33.33333333%;
    }

    .col-#{$infix}-5 {
      -ms-flex-preferred-size: 41.66666667%;
      flex-basis: 41.66666667%;
      max-width: 41.66666667%;
    }

    .col-#{$infix}-6 {
      -ms-flex-preferred-size: 50%;
      flex-basis: 50%;
      max-width: 50%;
    }

    .col-#{$infix}-7 {
      -ms-flex-preferred-size: 58.33333333%;
      flex-basis: 58.33333333%;
      max-width: 58.33333333%;
    }

    .col-#{$infix}-8 {
      -ms-flex-preferred-size: 66.66666667%;
      flex-basis: 66.66666667%;
      max-width: 66.66666667%;
    }

    .col-#{$infix}-9 {
      -ms-flex-preferred-size: 75%;
      flex-basis: 75%;
      max-width: 75%;
    }

    .col-#{$infix}-10 {
      -ms-flex-preferred-size: 83.33333333%;
      flex-basis: 83.33333333%;
      max-width: 83.33333333%;
    }

    .col-#{$infix}-11 {
      -ms-flex-preferred-size: 91.66666667%;
      flex-basis: 91.66666667%;
      max-width: 91.66666667%;
    }

    .col-#{$infix}-12 {
      -ms-flex-preferred-size: 100%;
      flex-basis: 100%;
      max-width: 100%;
    }

    .offset-#{$infix}-0 {
      margin-left: 0;
    }

    .offset-#{$infix}-1 {
      margin-left: 8.33333333%;
    }

    .offset-#{$infix}-2 {
      margin-left: 16.66666667%;
    }

    .offset-#{$infix}-3 {
      margin-left: 25%;
    }

    .offset-#{$infix}-4 {
      margin-left: 33.33333333%;
    }

    .offset-#{$infix}-5 {
      margin-left: 41.66666667%;
    }

    .offset-#{$infix}-6 {
      margin-left: 50%;
    }

    .offset-#{$infix}-7 {
      margin-left: 58.33333333%;
    }

    .offset-#{$infix}-8 {
      margin-left: 66.66666667%;
    }

    .offset-#{$infix}-9 {
      margin-left: 75%;
    }

    .offset-#{$infix}-10 {
      margin-left: 83.33333333%;
    }

    .offset-#{$infix}-11 {
      margin-left: 91.66666667%;
    }

    .first-#{$infix} {
      -webkit-box-ordinal-group: 0;
      -ms-flex-order: -1;
      order: -1;
    }

    .last-#{$infix} {
      -webkit-box-ordinal-group: 2;
      -ms-flex-order: 1;
      order: 1;
    }
  }
}
